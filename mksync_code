#!/bin/bash

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Implements code syncronization (option -s)

# ========================= static configuration
LOCALSRCDIR="$1/cvc4"
shift
REMOTE="$1"
shift
REMOTESYNCDIRS="$1/cvc4"
shift
THISEXEC="mksync_code"
# ========================= end static configuration

# usage: mksync_code [syncronization type]
echo "=== $THISEXEC $@"

SYNCTYPE=$1
shift
echo "$THISEXEC: Syncronize type is \"$SYNCTYPE\""

# ========================= compute source suffix
CURRDIR=$(pwd)
echo "$THISEXEC: This directory is $CURRDIR"
if [[ $CURRDIR != $LOCALSRCDIR* ]]; then
  echo "$THISEXEC: ERROR: not a git root directory"
  exit 1;
fi
SRCSUFFIX=${CURRDIR#"$LOCALSRCDIR"}
if [ ! -z $SRCSUFFIX ]; then
  SRCSUFFIX=${SRCSUFFIX#"-"}
fi
echo "$THISEXEC: with directory suffix \"$SRCSUFFIX\""
# ========================= end compute source suffix


# ========================= compute the sync directories
# compute directories based on configuration
if [ ! -z $SRCSUFFIX ]; then
  REMOTESYNCDIRS="$REMOTESYNCDIRS-$SRCSUFFIX"
  LOCALSRCDIR="$LOCALSRCDIR-$SRCSUFFIX"
fi
if [ $SYNCTYPE = "src" ]; then
  LOCALSYNCDIRS="./src/"
  REMOTESYNCDIRS="$REMOTESYNCDIRS/src/"
elif [ $SYNCTYPE = "test" ]; then
  LOCALSYNCDIRS="./test/"
  REMOTESYNCDIRS="$REMOTESYNCDIRS/test/"
elif [ $SYNCTYPE = "all" ]; then
  LOCALSYNCDIRS="."
else
  echo "$THISEXEC: ERROR: Unknown syncronize type"
  exit 1;
fi
shift
# ========================= end compute the sync directories


# ========================= run syncronization
# rsync remote with local, based on config
echo "$THISEXEC: EXEC: rsync -chazP -e \"ssh -p 40\" $LOCALSYNCDIRS $REMOTE:$REMOTESYNCDIRS"
rsync -chazP -e "ssh -p 40" $LOCALSYNCDIRS $REMOTE:$REMOTESYNCDIRS
# ========================= end run syncronization

echo "$THISEXEC: finished $@"
