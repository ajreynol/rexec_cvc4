#!/bin/bash

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Implements code syncronization (option -s)

# ========================= static configuration
LOCALSRCDIR="$1/cvc5"
shift
REMOTE="$1"
shift
REMOTESYNCDIR="$1/cvc5"
shift
THISEXEC="mksync_code"
# ========================= end static configuration

# usage: mksync_code [syncronization type]
echo "=== $THISEXEC $@"

SYNCTYPE=$1
shift
echo "$THISEXEC: Syncronize type is \"$SYNCTYPE\""

# ========================= compute source suffix
CURRDIR=$(pwd)
echo "$THISEXEC: This directory is $CURRDIR"
if [[ $CURRDIR != $LOCALSRCDIR* ]]; then
  echo "$THISEXEC: ERROR: not a git root directory"
  exit 1;
fi
SRCSUFFIX=${CURRDIR#"$LOCALSRCDIR"}
if [ ! -z $SRCSUFFIX ]; then
  SRCSUFFIX=${SRCSUFFIX#"-"}
fi
echo "$THISEXEC: with directory suffix \"$SRCSUFFIX\""
# ========================= end compute source suffix

function call_rsync
{
  LOCALSYNC=$1
  REMOTESYNC=$2
  echo "$THISEXEC: run: rsync --existing -chazP -e \"ssh -p 40\" $LOCALSYNC $REMOTE:$REMOTESYNC"
  rsync --existing -chazP -e "ssh -p 40" $LOCALSYNC $REMOTE:$REMOTESYNC
}

# ========================= run syncronization
# compute directories based on configuration
if [ ! -z $SRCSUFFIX ]; then
  REMOTESYNCDIR="$REMOTESYNCDIR-$SRCSUFFIX"
  LOCALSRCDIR="$LOCALSRCDIR-$SRCSUFFIX"
fi
if [ $SYNCTYPE = "src" ]; then
  call_rsync "./src/" "$REMOTESYNCDIR/src/"
elif [ $SYNCTYPE = "test" ]; then
  call_rsync "./test/" "$REMOTESYNCDIR/test/"
elif [ $SYNCTYPE = "dev" ]; then
  # multiple commands with an ssh connection
  ssh -Nf -p 40 $REMOTE
  call_rsync "./src/" "$REMOTESYNCDIR/src/"
  call_rsync "./test/" "$REMOTESYNCDIR/test/"
  ssh -O exit $REMOTE
elif [ $SYNCTYPE = "all" ]; then
  call_rsync "."
else
  echo "$THISEXEC: ERROR: Unknown syncronize type"
  exit 1;
fi
shift
# ========================= end compute the sync directories

echo "$THISEXEC: finished $@"
